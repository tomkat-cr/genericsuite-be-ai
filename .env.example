######################################
# GenericSuite General Configuration #
######################################
#
# Aplicacion name
APP_NAME=ExampleApp
# Aplicacion domain
APP_DOMAIN_NAME=exampleapp.com
# Aplicacion AI assistant name
AI_ASSISTANT_NAME=ExampleBot
# Application default language
DEFAULT_LANG=en
#
# # PROD
# APP_DEBUG=0
# APP_STAGE=prod
# # QA
# APP_DEBUG=1
# APP_STAGE=qa
# DEV
# Application debug (0,1)
APP_DEBUG=1
# Application environment: dev, qa, staging, prod
# APP_STAGE=dev
# Application super admin email
APP_SUPERADMIN_EMAIL=xxxx
# Application secret ket (to set password encryption)
APP_SECRET_KEY=xxxx
# Storage seed (to set storage URL encryption -e.g. AWS S3-)
STORAGE_URL_SEED=yyy
#
# Database configuration
#
# For AWS DynamoDB
# # DEV: docker
# APP_DB_ENGINE_DEV=DYNAMO_DB
# APP_DB_NAME_DEV=
# APP_DB_URI_DEV=http://localhost:8000
# # QA: AWS DynamoDB
# APP_DB_ENGINE_QA=DYNAMO_DB
# APP_DB_NAME_QA=
# APP_DB_URI_QA=
# # PROD: AWS DynamoDB
# APP_DB_ENGINE_PROD=DYNAMO_DB
# APP_DB_NAME_PROD=
# APP_DB_URI_PROD=
# # DEMO: AWS DynamoDB
# APP_DB_ENGINE_DEMO=DYNAMO_DB
# APP_DB_NAME_DEMO=
# APP_DB_URI_DEMO=
#
# For MongoDB
# DEV: Docker container
APP_DB_ENGINE_DEV=MONGO_DB
APP_DB_NAME_DEV=mongo
APP_DB_URI_DEV=mongodb://root:example@app.exampleapp.local:27017/
APP_CORS_ORIGIN_DEV=*
AWS_S3_CHATBOT_ATTACHMENTS_BUCKET_DEV=aws-s3-bucket-name
# QA: MongoDB Atlas
APP_DB_ENGINE_QA=MONGO_DB
APP_DB_NAME_QA=xxxx
APP_DB_URI_QA=mongodb+srv://<user>:<password>@<cluster>.mongodb.net
APP_CORS_ORIGIN_QA=*
APP_CORS_ORIGIN_QA_CLOUD=https://app-qa.exampleapp.com
APP_CORS_ORIGIN_QA_LOCAL=http://localhost:3000
AWS_S3_CHATBOT_ATTACHMENTS_BUCKET_QA=aws-s3-bucket-name
# Staging: MongoDB Atlas
APP_DB_ENGINE_STAGING=MONGO_DB
APP_DB_NAME_STAGING=xxxx
APP_DB_URI_STAGING=mongodb+srv://<user>:<password>@<cluster>.mongodb.net
APP_CORS_ORIGIN_STAGING=https://app-staging.exampleapp.com
AWS_S3_CHATBOT_ATTACHMENTS_BUCKET_STAGING=aws-s3-bucket-name
# PROD: MongoDB Atlas
APP_DB_ENGINE_PROD=MONGO_DB
APP_DB_NAME_PROD=xxxx
APP_DB_URI_PROD=mongodb+srv://<user>:<password>@<cluster>.mongodb.net
APP_CORS_ORIGIN_PROD=https://app.exampleapp.com
AWS_S3_CHATBOT_ATTACHMENTS_BUCKET_PROD=aws-s3-bucket-name
# DEMO: MongoDB Atlas
APP_DB_ENGINE_DEMO=MONGO_DB
APP_DB_NAME_DEMO=xxxx
APP_DB_URI_DEMO=mongodb+srv://<user>:<password>@<cluster>.mongodb.net
APP_CORS_ORIGIN_DEMO=https://app-demo.exampleapp.com
AWS_S3_CHATBOT_ATTACHMENTS_BUCKET_DEMO=aws-s3-bucket-name
#
# Current framkework options: chalice, flask, fastapi
CURRENT_FRAMEWORK=chalice
#
# JSON configuration files location and git URL
GIT_SUBMODULE_LOCAL_PATH=lib/config_dbdef
GIT_SUBMODULE_URL=git://github.com/username/configs_repo_name.git
#
# Forntend application path (to copy version file during big lambdas deployment)
FRONTEND_PATH=../exampleapp_frontend
#
# Local python version
PYTHON_VERSION=3.11.5
#
# AWS Configuration
# https://console.aws.amazon.com
AWS_S3_BUCKET_NAME_FE=aws-s3-bucket-name
AWS_REGION=aws-region
AWS_API_GATEWAY_STAGE=aws-api-gateway-stage
AWS_LAMBDA_FUNCTION_NAME=aws-lambda-function-name
AWS_LAMBDA_FUNCTION_ROLE=aws-lambda-function-role
AWS_SSL_CERTIFICATE_ARN=arn:aws:acm:AWS-REGION:AWS-ACCOUNT:certificate/AWS-CERTIFICATE-UUD
#
# Development URL masking external hostname (storage URL encryption)
URL_MASK_EXTERNAL_HOSTNAME=app-dev.exampleapp.com
#
# SMTP Mail configuration
SMTP_SERVER=smtp_server
SMTP_PORT=smtp_port
SMTP_USER=smtp_user
SMTP_PASSWORD=smtp_password
SMTP_DEFAULT_SENDER=sender_email
#
# Docker configuration
DOCKER_ACCOUNT=docker_account_username
#
# Local development environment run configuration
# Options are: uvicorn, gunicorn, chalice, chalice_docker
# Chalice case: "chalice" to use http (running without docker) or "chalice_docker" to use https (with docker)
# http:
# RUN_METHOD="chalice"
# https:
RUN_METHOD="chalice_docker"
#
# Tests configuration
# Testing enndpoint
TEST_APP_URL=http://app.exampleapp.local:5002
#
# Flask configuration
FLASK_APP=index.py
#
# AI technology (openai/langchain APIs)
# AI_TECHNOLOGY="openai"
AI_TECHNOLOGY="langchain"
#
####################
# AI Configuration #
####################
#
# Google configuration
# https://console.cloud.google.com/apis/credentials
GOOGLE_API_KEY=google_console_api_key
# https://programmablesearchengine.google.com/
GOOGLE_CSE_ID=google_console_cse_key
#
# OpenAI configuration
# https://platform.openai.com/api-keys
OPENAI_API_KEY=openai_api_key
# https://openai.com/api/pricing/
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_TEMPERATURE=0.7
#
# Langchain/LangSmith configuration
# https://smith.langchain.com/settings
LANGCHAIN_API_KEY=langchain_api_key
LANGCHAIN_PROJECT=langchain_project
#
# Hugging Face configuration
# https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=huggingface_api_key
HUGGINGFACE_ENDPOINT_URL=huggingface_endpoint_url
#
# Anthropic configuration
# https://console.anthropic.com/settings/keys
ANTHROPIC_MODEL=claude-3-sonnet
ANTHROPIC_API_KEY=anthropic_api_key
#
# Eleven Labs configuration
# https://elevenlabs.io/app/subscription
ELEVENLABS_API_KEY=elevenlabs_api_key
#
# Cohere configuration
# https://dashboard.cohere.com/api-keys
COHERE_API_KEY=cohere_api_key
#
# Pinecone configuration
# https://app.pinecone.io/keys
PINECONE_API_KEY=pinecone_api_key
PINECONE_ENV=pinecone_env
#
# Vectara configuration
# https://console.vectara.com/console/apiAccess/personalApiKey
VECTARA_CUSTOMER_ID=vectara_customer_id
VECTARA_CORPUS_ID=vectara_corpus_id
VECTARA_API_KEY=vectara_api_key
#
# Weaviate configuration
# https://console.weaviate.cloud/dashboard
WEAVIATE_URL=weaviate_url
WEAVIATE_API_KEY=weaviate_api_key
